<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.wolfcode.car.business.mapper.EmployeeMapper">
    <resultMap id="BaseResultMap" type="cn.wolfcode.car.business.domain.Employee">
        <id column="id" property="id"/>
        <result column="name" property="name"/>
        <result column="email" property="email"/>
        <result column="age" property="age"/>
        <result column="admin" property="admin"/>
        <result column="status" property="status"/>
        <result column="dept_id" property="dept.id"/>
        <result column="hiredate" property="hiredate"/>
        <result column="dept_name" property="dept.name"/>
        <result column="dept_sn" property="dept.sn"/>
    </resultMap>
    <delete id="deleteByPrimaryKey">
        delete
        from employee
        where id = #{id}
    </delete>
    <insert id="insert" useGeneratedKeys="true" keyProperty="id">
        insert into employee (name, email, age, admin, status, dept_id, hiredate)
        values (#{name}, #{email}, #{age}, #{admin}, #{status}, #{deptId}, #{hiredate})
    </insert>
    <update id="updateByPrimaryKey">
        update employee
        set name     = #{name},
            email    = #{email},
            age      = #{age},
            admin    = #{admin},
            status   = #{status},
            dept_id  = #{deptId},
            hiredate = #{hiredate}
        where id = #{id}
    </update>
    <select id="selectByPrimaryKey" resultMap="BaseResultMap">
        select id,
               name,
               email,
               age,
               admin,
               status,
               dept_id,
               hiredate
        from employee
        where id = #{id}
    </select>
    <select id="selectAll" resultMap="BaseResultMap">
        select id,
               name,
               email,
               age,
               admin,
               status,
               dept_id,
               hiredate
        from employee
    </select>
    <select id="selectForList" resultMap="BaseResultMap">
        select e.id,
        e.name,
        email,
        age,
        admin,
        status,
        hiredate,dept.name dept_name, dept.sn dept_sn
        from employee e left join department dept on (e.dept_id = dept.id)
        <where>
            <if test="customerName!=null and customerName!=''">
                and e.name like concat('%',#{customerName},'%')
            </if>
            <if test="customerName!=null and customerName!=''">
                and email like concat('%',#{customerName},'%')
            </if>
            <if test="beginTime!=null">
                and hiredate &gt;=#{beginTime}
            </if>
            <if test="endTime!=null">
                and hiredate &lt;=#{endTime}
            </if>
            <if test="admin!=null">
                and admin =#{admin}
            </if>
            <if test="age!=null">
                and age =#{age}
            </if>
            <if test="status!=null">
                and status =#{status}
            </if>
            <if test="dept_id=null">
                and e.dept_id =#{dept_id}
            </if>
        </where>
    </select>
</mapper>